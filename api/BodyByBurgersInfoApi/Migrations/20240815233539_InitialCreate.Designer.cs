// <auto-generated />
using System;
using BodyByBurgersInfoApi.BusinessLogic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BodyByBurgersInfoApi.Migrations
{
    [DbContext(typeof(InfoContext))]
    [Migration("20240815233539_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "leaf",
                            Name = "Lettuce"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "new-box",
                            Name = "Tomato"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "new-box",
                            Name = "Onion"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "cheese",
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 5,
                            Icon = "new-box",
                            Name = "Pickles"
                        },
                        new
                        {
                            Id = 6,
                            Icon = "pig-variant-outline",
                            Name = "Bacon"
                        },
                        new
                        {
                            Id = 7,
                            Icon = "new-box",
                            Name = "Ketchup"
                        },
                        new
                        {
                            Id = 8,
                            Icon = "new-box",
                            Name = "Mustard"
                        },
                        new
                        {
                            Id = 9,
                            Icon = "new-box",
                            Name = "Mayonnaise"
                        },
                        new
                        {
                            Id = 10,
                            Icon = "cow",
                            Name = "Beef Patty"
                        },
                        new
                        {
                            Id = 11,
                            Icon = "chicken",
                            Name = "Chicken Patty"
                        },
                        new
                        {
                            Id = 12,
                            Icon = "leaf",
                            Name = "Veggie Patty"
                        },
                        new
                        {
                            Id = 13,
                            Icon = "egg-fried",
                            Name = "Fried Egg"
                        },
                        new
                        {
                            Id = 14,
                            Icon = "cheese",
                            Name = "Cheddar"
                        },
                        new
                        {
                            Id = 15,
                            Icon = "cheese",
                            Name = "Gouda"
                        },
                        new
                        {
                            Id = 16,
                            Icon = "cheese",
                            Name = "American"
                        },
                        new
                        {
                            Id = 17,
                            Icon = "cheese",
                            Name = "Mozzarella"
                        },
                        new
                        {
                            Id = 18,
                            Icon = "cheese",
                            Name = "Swiss"
                        },
                        new
                        {
                            Id = 19,
                            Icon = "cheese",
                            Name = "Pepper Jack"
                        },
                        new
                        {
                            Id = 20,
                            Icon = "bread-slice-outline",
                            Name = "Brioche Bun"
                        },
                        new
                        {
                            Id = 21,
                            Icon = "bread-slice-outline",
                            Name = "Sesame Bun"
                        },
                        new
                        {
                            Id = 22,
                            Icon = "bread-slice-outline",
                            Name = "Pretzel Bun"
                        },
                        new
                        {
                            Id = 23,
                            Icon = "bread-slice-outline",
                            Name = "Ciabatta Bun"
                        },
                        new
                        {
                            Id = 24,
                            Icon = "bread-slice-outline",
                            Name = "Gluten Free Bun"
                        },
                        new
                        {
                            Id = 25,
                            Icon = "bread-slice-outline",
                            Name = "Wheat Bun"
                        },
                        new
                        {
                            Id = 26,
                            Icon = "liquid-spot",
                            Name = "Mayo"
                        },
                        new
                        {
                            Id = 27,
                            Icon = "liquid-spot",
                            Name = "Hot Sauce"
                        },
                        new
                        {
                            Id = 28,
                            Icon = "liquid-spot",
                            Name = "BBQ Sauce"
                        },
                        new
                        {
                            Id = 29,
                            Icon = "liquid-spot",
                            Name = "Ranch"
                        },
                        new
                        {
                            Id = 30,
                            Icon = "liquid-spot",
                            Name = "Buffalo Sauce"
                        },
                        new
                        {
                            Id = 31,
                            Icon = "liquid-spot",
                            Name = "Honey Mustard"
                        },
                        new
                        {
                            Id = 32,
                            Icon = "liquid-spot",
                            Name = "Chipotle Mayo"
                        },
                        new
                        {
                            Id = 33,
                            Icon = "liquid-spot",
                            Name = "Garlic Aioli"
                        },
                        new
                        {
                            Id = 34,
                            Icon = "liquid-spot",
                            Name = "Truffle Aioli"
                        },
                        new
                        {
                            Id = 35,
                            Icon = "peanut-outline",
                            Name = "Peanut Butter"
                        },
                        new
                        {
                            Id = 36,
                            Icon = "jellyfish-outline",
                            Name = "Jelly"
                        },
                        new
                        {
                            Id = 37,
                            Icon = "pig-variant-outline",
                            Name = "Bacon Jam"
                        },
                        new
                        {
                            Id = 38,
                            Icon = "pig-variant-outline",
                            Name = "Pulled Pork"
                        },
                        new
                        {
                            Id = 39,
                            Icon = "new-box",
                            Name = "Onion Rings"
                        },
                        new
                        {
                            Id = 40,
                            Icon = "new-box",
                            Name = "Fried Pickles"
                        },
                        new
                        {
                            Id = 41,
                            Icon = "chili-hot-outline",
                            Name = "Jalapenos"
                        },
                        new
                        {
                            Id = 42,
                            Icon = "new-box",
                            Name = "Avocado"
                        },
                        new
                        {
                            Id = 43,
                            Icon = "new-box",
                            Name = "Mushrooms"
                        },
                        new
                        {
                            Id = 44,
                            Icon = "new-box",
                            Name = "Caramelized Onions"
                        },
                        new
                        {
                            Id = 45,
                            Icon = "cow",
                            Name = "Wagyu Beef"
                        },
                        new
                        {
                            Id = 46,
                            Icon = "star",
                            Name = "Special Sauce"
                        });
                });

            modelBuilder.Entity("IngredientReview", b =>
                {
                    b.Property<int>("IngredientsId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("IngredientsId", "ReviewId");

                    b.HasIndex("ReviewId");

                    b.ToTable("IngredientReview");

                    b.HasData(
                        new
                        {
                            IngredientsId = 14,
                            ReviewId = 1
                        },
                        new
                        {
                            IngredientsId = 4,
                            ReviewId = 1
                        },
                        new
                        {
                            IngredientsId = 6,
                            ReviewId = 1
                        },
                        new
                        {
                            IngredientsId = 14,
                            ReviewId = 2
                        },
                        new
                        {
                            IngredientsId = 16,
                            ReviewId = 3
                        },
                        new
                        {
                            IngredientsId = 2,
                            ReviewId = 3
                        },
                        new
                        {
                            IngredientsId = 44,
                            ReviewId = 3
                        },
                        new
                        {
                            IngredientsId = 5,
                            ReviewId = 3
                        },
                        new
                        {
                            IngredientsId = 21,
                            ReviewId = 3
                        });
                });

            modelBuilder.Entity("Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.ToTable("Picture");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReviewId = 3,
                            Url = "https://pub-06851190cddc4684902b556426d2e9a1.r2.dev/IMG_4685.jpg"
                        });
                });

            modelBuilder.Entity("Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeoLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Insta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTimeOffset(new DateTime(2024, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "I added an egg and bacon. bacon wasn’t crispy. egg wasn’t over easy which is a shame. \n            probably 4 stars worthy at the restaurant. \n            https://www.facebook.com/burgerboss.br",
                            GeoLocation = "n/a",
                            Insta = "n/a",
                            Location = "Burger Boss",
                            Name = "Burger Boss",
                            Price = 8m,
                            Rating = 3.5m
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTimeOffset(new DateTime(2024, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "bun toasted sesame seed. bacon was cooked perfectly.\n            ordered medium - was more medium well. overall very good burger. probably better as a single.\n            maybe slightly less mayo but it was a very good burger special butter mayo.",
                            GeoLocation = "n/a",
                            Insta = "n/a",
                            Location = "Burgers and Beyond  (Shoreditch London)",
                            Name = "Butter Burger (double)",
                            Price = 0m,
                            Rating = 5m
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTimeOffset(new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "First bite impression: very large and messy. some of the meat fell out when i bit into it.\n            The meat was very crumbly and other took all the flavor. It wasn't falvored very well either. A little dissapointing.\n            It looked incredible as you'll see from the picture.",
                            GeoLocation = "n/a",
                            Insta = "https://www.instagram.com/spitalfieldse1/",
                            Location = "The Grime Burger (Shoreditch London)",
                            Name = "Double Grime Burger",
                            Price = 0m,
                            Rating = 3.5m
                        });
                });

            modelBuilder.Entity("IngredientReview", b =>
                {
                    b.HasOne("Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Review", null)
                        .WithMany()
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Picture", b =>
                {
                    b.HasOne("Review", null)
                        .WithMany("Pics")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Review", b =>
                {
                    b.Navigation("Pics");
                });
#pragma warning restore 612, 618
        }
    }
}
